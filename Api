FROM ubuntu:20.04

LABEL maintainer="Raghu T <raghu.t@iopex.com>"

# Add a new user "iopex" with user id 3333
RUN useradd -ms /bin/bash -u 3333 iopex

# Install dependencies
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    vim \
    wget \
    curl \
    python3 \
    python3-dev \
    python3-pip \
    libmysqlclient-dev \
    python3-pymysql \
    libleptonica-dev \
    python3-unidecode \
    language-pack-en \
    nginx \
    python3-setuptools \
    python3-opencv \
    poppler-utils \
    libssl-dev \
    python \
    python-dev \
    supervisor \
    gnupg2 \
    cron \
    openssl \
    ca-certificates

# Install wkhtmltopdf
RUN wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb && \
    apt install -y ./wkhtmltox_0.12.6-1.focal_amd64.deb

# Install Microsoft SQL Server ODBC driver
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev

WORKDIR /var/opt

COPY . /var/opt

# Install Python dependencies
RUN python3 -m pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Set environment variables
ENV MANUAL_EMAIL=mail.test2@iopex.com \
    MANUAL_EMAIL_HOST=mail2.iopex.com \
    MANUAL_EMAIL_PORT=587 \
    MANUAL_EMAIL_HOST_USER=mail.test2@iopex.com \
    MANUAL_EMAIL_HOST_PASSWORD=iopex@123

# Prepare directories and configuration
RUN rm -rf /var/opt/media /var/opt/db_data && \
    mkdir -p /var/opt/media/log /var/opt/media/sample && \
    cp -r ./media/sample/* /var/opt/media/sample/ && \
    mv -f /var/opt/opexwise/settings.py.dist /var/opt/opexwise/settings.py && \
    export LC_ALL="en_US.UTF-8" && \
    mkdir -p /etc/uwsgi/sites /etc/uwsgi/vassals && \
    ln -s /var/opt/opexwise.ini /etc/uwsgi/vassals/ && \
    mv -f /var/opt/nginx/default /etc/nginx/sites-available/ && \
    echo "daemon off;" >> /etc/nginx/nginx.conf && \
    chmod a+x /var/opt/background.sh /var/opt/start.sh

# Add cron file
COPY opexwise-cron /etc/cron.d/opexwise-cron

EXPOSE 80

HEALTHCHECK CMD (pgrep -f nginx | pgrep -f background.sh) || exit 1

ENTRYPOINT ["./start.sh"]
